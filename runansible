#!/bin/bash
# Runs a playbook in a project (for cron)

# Add ARA to PYTHONPATH
export PYTHONPATH=$PYTHONPATH:/opt/ansible/tools/ara

# Load GPG agent's soocket if it isn't there
[ -z "$SSH_AUTH_SOCK" ] && export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)

# Defaults
PROJECTDIR=/opt/ansible/projects
PLAYBOOKDIR=playbooks
UPDATE_ROLES=false
OLD_ANSIBLE=false
UPDATE_GIT=false
SPARSE=false
INVENTORY=""

# Override any defaults that are set by the user
test -f $HOME/.runansible.conf && . $HOME/.runansible.conf

usage="Usage: $0 [-p project] [-i inventory] [-s] playbook.yml

    -g           Update git checkout before running
    -p project   Name of the project to run the playbook from
    -i project   Name of the inventory to use, can be provided multiple times
    -r           Update roles before running playbook
    -R           Update roles before running playbook (compatible with 2.9)
    -s           Make Ansible's output sparse
    -h           This text
"

while getopts "ghi:p:srR" opt; do
  case ${opt} in
    g)
      UPDATE_GIT=true
      ;;
    p)
      PROJECT="$OPTARG"
      ;;
    i)
      INVENTORY="${INVENTORY} -i $OPTARG"
      ;;
    s)
      export ANSIBLE_DISPLAY_FAILED_STDERR=true
      export ANSIBLE_DISPLAY_OK_HOSTS=false
      export ANSIBLE_DISPLAY_SKIPPED_HOSTS=false
      export SPARSE=true
      ;;
    r)
      UPDATE_ROLES=true
      ;;
    R)
      UPDATE_ROLES=true
      OLD_ANSIBLE=true
      ;;
    h)
      echo -e "$usage"
      exit 0
      ;;
  esac
done

shift $[$OPTIND -1]
PLAYBOOK=$1
shift 1

[ -z "$PROJECT" ] || [ -z "$PLAYBOOK" ] && echo "$usage" && exit 1

cd $PROJECTDIR/$PROJECT

# check for update_checkout and use that if it's present
$UPDATE_GIT && {
  [[ -x scripts/update_checkout.sh ]] && scripts/update_checkout.sh > /dev/null 2>&1 ||
  git pull >/dev/null 2>&1
}

$UPDATE_ROLES && {
  [[ -f roles/requirements.yml ]] && {
    $SPARSE && {
      ansible-galaxy install -fr roles/requirements.yml >/dev/null 2>&1
      $OLD_ANSIBLE && ansible-galaxy collection install -fr roles/requirements.yml >/dev/null 2>&1
    } || {
      ansible-galaxy install -fr roles/requirements.yml
      $OLD_ANSIBLE && ansible-galaxy collection install -fr roles/requirements.yml
  }
  } || {
    $SPARSE && {
      ansible-galaxy install -fr requirements.yml >/dev/null 2>&1
      $OLD_ANSIBLE && ansible-galaxy collection install -fr requirements.yml >/dev/null 2>&1
    } || {
      ansible-galaxy install -fr requirements.yml
      $OLD_ANSIBLE && ansible-galaxy collection install -fr requirements.yml
    }
  }
}

ansible-playbook $INVENTORY -e ara_playbook_name="$PROJECT - $PLAYBOOK" --diff $PLAYBOOKDIR/$PLAYBOOK "$@"
